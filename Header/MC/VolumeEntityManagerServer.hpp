// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Core.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class VolumeEntityManagerServer {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_VOLUMEENTITYMANAGERSERVER
public:
    class VolumeEntityManagerServer& operator=(class VolumeEntityManagerServer const&) = delete;
    VolumeEntityManagerServer(class VolumeEntityManagerServer const&) = delete;
    VolumeEntityManagerServer() = delete;
#endif

public:
    /*0*/ virtual ~VolumeEntityManagerServer();
    MCAPI VolumeEntityManagerServer(class StackRefResultT<struct EntityRegistryRefTraits>);
    MCAPI class StackRefResultT<struct EntityRefTraits> createVolume(std::string const&, std::string const&);
    MCAPI std::vector<class WeakRefT<struct EntityRefTraits>> getAllVolumesOverlappingChunkPosition(class ChunkPos const&, class AutomaticID<class Dimension, int>) const;
    MCAPI void loadVolumeFiles(class Core::PathBuffer<std::string > const&, bool);
    MCAPI void sendAllVolumesToClient(class UserEntityIdentifierComponent const&, class NetworkIdentifier const&, class PacketSender&) const;

protected:

private:
    MCAPI std::string _findUsableName() const;

};