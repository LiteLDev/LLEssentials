// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class LevelChunkBlendingAttenuator {

#define AFTER_EXTRA
// Add Member There
public:
struct HeightAttenuationData {
    HeightAttenuationData() = delete;
    HeightAttenuationData(HeightAttenuationData const&) = delete;
    HeightAttenuationData(HeightAttenuationData const&&) = delete;
};
struct CornerDepthData {
    CornerDepthData() = delete;
    CornerDepthData(CornerDepthData const&) = delete;
    CornerDepthData(CornerDepthData const&&) = delete;
};

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LEVELCHUNKBLENDINGATTENUATOR
public:
    class LevelChunkBlendingAttenuator& operator=(class LevelChunkBlendingAttenuator const&) = delete;
    LevelChunkBlendingAttenuator(class LevelChunkBlendingAttenuator const&) = delete;
    LevelChunkBlendingAttenuator() = delete;
#endif

public:
    MCAPI LevelChunkBlendingAttenuator(class ChunkPos, class std::array<class std::array<struct LevelChunkBlendingAttenuator::HeightAttenuationData, 2>, 2>);
    MCAPI struct std::pair<float, float> attenuateOffsetAndFactor(class DividedPos2d<4> const&, short, float, float, class PerlinSimplexNoise const&);
    MCAPI static void adjustHeightAttenuationFactors(class std::array<class std::array<struct LevelChunkBlendingAttenuator::HeightAttenuationData, 2>, 2>&, class std::array<class std::array<struct LevelChunkBlendingAttenuator::CornerDepthData, 2>, 2>&, class ChunkPos const&, class std::array<class std::array<class Vec2, 2>, 2> const&, float);
    MCAPI static class std::optional<class std::array<class std::array<struct LevelChunkBlendingAttenuator::HeightAttenuationData, 2>, 2> > determineHeightAttenuationFactors(class ChunkPos const&, class std::function<class std::tuple<bool, float> (class ChunkPos const& )>);

protected:

private:

};